#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

 struct node
{
    int data;
    struct node *left_link,*right_link;
};

struct node* create_node()
{  
   struct node *newnode;
   newnode=(struct node*)malloc(sizeof(struct node));
   
   if(newnode==NULL)
      printf("memory not allocated\n");
   else 
   {
      scanf("%d",&newnode->data);
      newnode->right_link=newnode;
      newnode->left_link=newnode;
   }
   return newnode;
}

struct node*insert_front_cdll(struct node* head,struct node*newnode)
{
    struct node *last=NULL;
    if(head==NULL)
        head=newnode;
    else
    {
        last=head->left_link;
        
        newnode->right_link=head;
        head->left_link=newnode;
        last->right_link=newnode;
        newnode->left_link=last;
        
        head=newnode;
    }
    return head;
}
void display_cdll(struct node *head)
{
    struct node *cur=NULL;
    if(head==NULL)
        printf("CDLL Empty.\n");
    else
    {
        cur=head;
        do
        {
            printf("%d ",cur->data);
            cur=cur->right_link;
        }while(cur!=head);
        
    }
}

void display_reverse_cdll(struct node *head)
{
    struct node *cur=NULL, *last=NULL;
    if(head==NULL)
        printf("CDLL is empty.\n");
    else
    {
        last=head->left_link;
        
         cur=last;
         do
         {
             printf("%d ",cur->data);
             cur=cur->left_link;
         }while(cur!=last);
            
        
        
    }
}


int main()
{
    struct node *head=NULL,*newnode=NULL;
    int N;
    scanf("%d",&N);
    if(N>0)
    { 
        for(int i=0;i<N;i++)
        {
        
        newnode=create_node();
        head=insert_front_cdll(head,newnode);
        }
        printf("CDLL in forward direction is:\n");
        display_cdll(head);
        printf("\n\nCDLL in reverse direction is:\n");
        display_reverse_cdll(head);
        
    }
    else
        printf("Invalid input\n");
    return 0;
}
